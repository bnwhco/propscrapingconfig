import React from 'react';
import ReactDOM from 'react-dom/client';
import { Amplify } from 'aws-amplify';
import { ThemeProvider, createTheme } from '@aws-amplify/ui-react';
import App from './App';
import './index.css';
import amplifyConfig from '../amplify_outputs.json';
// Note: In a production app, this would be imported from aws-exports.js
// For now, we'll include a placeholder configuration
// This would be generated by Amplify CLI after running 'amplify init'
/*const amplifyConfig = {
  // Placeholder configuration - to be replaced with actual config
  Auth: {
    Cognito: {
      userPoolId: 'REPLACE_WITH_USER_POOL_ID',
      userPoolClientId: 'REPLACE_WITH_USER_POOL_CLIENT_ID',
      identityPoolId: 'REPLACE_WITH_IDENTITY_POOL_ID',
      signUpVerificationMethod: 'code',
    }
  },
  API: {
    REST: {
      // Configure your REST API endpoints here
    }
  }
};*/

// Initialize Amplify
Amplify.configure(amplifyConfig);

// Create a custom theme for Amplify UI components
const theme = createTheme({
  name: 'property-scraper-theme',
  tokens: {
    colors: {
      brand: {
        primary: {
          10: '#e8f5e9',
          20: '#c8e6c9',
          40: '#81c784',
          60: '#4caf50',
          80: '#388e3c',
          90: '#2e7d32',
          100: '#1b5e20',
        },
      },
    },
    components: {
      button: {
        primary: {
          backgroundColor: {
            value: '{colors.brand.primary.60}',
          },
          _hover: {
            backgroundColor: {
              value: '{colors.brand.primary.80}',
            },
          },
        },
      },
    },
  },
});

// Create root element if it doesn't exist
const rootElement = document.getElementById('root') || document.createElement('div');
if (!rootElement.id) {
  rootElement.id = 'root';
  document.body.appendChild(rootElement);
}

// Render the app
ReactDOM.createRoot(rootElement).render(
  <React.StrictMode>
    <ThemeProvider theme={theme}>
      <App />
    </ThemeProvider>
  </React.StrictMode>
);
